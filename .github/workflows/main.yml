name: Proxy Master T·ªëi ∆Øu

on:
  schedule:
    - cron: '0 */5 * * *'  # T·ª± ƒë·ªông ch·∫°y m·ªói 5 gi·ªù
  workflow_dispatch:        # Cho ph√©p ch·∫°y th·ªß c√¥ng

jobs:
  cap_nhat:
    runs-on: ubuntu-latest
    timeout-minutes: 360  # T·ª± ƒë·ªông h·ªßy n·∫øu ch·∫°y qu√° 6 ti·∫øng
    
    steps:
      # --- PH·∫¶N 1: THI·∫æT L·∫¨P C∆† B·∫¢N ---
      - name: "üîß 1. Thi·∫øt l·∫≠p ban ƒë·∫ßu"
        run: |
          sudo apt-get update
          sudo apt-get install -y curl git python3 python3-venv
          git config --global --add safe.directory /github/workspace
          
      - name: "üì• 2. Checkout code"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # --- PH·∫¶N 2: KH·ªûI ƒê·ªòNG SERVICE ---
      - name: "üêç 3. C√†i ƒë·∫∑t Python"
        run: |
          python3 -m venv env
          source env/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: "üöÄ 4. Kh·ªüi ƒë·ªông proxy service"
        run: |
          pkill -f "python3 start.py" || true
          nohup python3 start.py > start.log 2>&1 &
          echo "üïí Ch·ªù 20s cho service ·ªïn ƒë·ªãnh..."
          sleep 20
          
          # Ki·ªÉm tra service ƒë√£ ch·∫°y ch∆∞a
          if ! curl -s http://127.0.0.1:8000 >/dev/null; then
            echo "‚ùå L·ªñI: Kh√¥ng th·ªÉ k·∫øt n·ªëi ƒë·∫øn proxy service"
            exit 1
          fi

      # --- PH·∫¶N 3: V√íNG L·∫∂P CH√çNH ---
      - name: "üîÑ 5. V√≤ng l·∫∑p c·∫≠p nh·∫≠t"
        run: |
          # C·∫•u h√¨nh Git
          git config --global user.name "neganok"
          git config --global user.email "hackersvn1@gmail.com"
          git config --global pull.rebase false
          
          # T·∫°o th∆∞ m·ª•c n·∫øu ch∆∞a c√≥
          mkdir -p Proxies
          
          echo "‚è≥ B·∫Øt ƒë·∫ßu chu k·ª≥ c·∫≠p nh·∫≠t (150 l·∫ßn)"
          for i in {1..150}; do
            echo "----------------------------------------"
            echo "üîÑ L·∫¶N $i/150 | $(date '+%H:%M:%S %d/%m')"
            
            # --- T·∫¢I PROXY ---
            echo "‚¨áÔ∏è ƒêang t·∫£i proxy..."
            any_update=false
            
            for type in http https socks4 socks5; do
              # T·∫£i v·ªÅ file t·∫°m tr∆∞·ªõc
              if curl -s "http://127.0.0.1:8000/proxy/$type?time=3&minutes=15&format=text" -o "Proxies/${type}_new.txt"; then
                # So s√°nh v·ªõi file c≈©
                if ! cmp -s "Proxies/${type}.txt" "Proxies/${type}_new.txt"; then
                  mv "Proxies/${type}_new.txt" "Proxies/${type}.txt"
                  echo "  - ${type}.txt: $(wc -l < "Proxies/${type}.txt") proxy"
                  any_update=true
                else
                  rm "Proxies/${type}_new.txt"
                  echo "  - ${type}.txt: Kh√¥ng c√≥ thay ƒë·ªïi"
                fi
              else
                echo "‚ö†Ô∏è L·ªói khi t·∫£i ${type}.txt"
              fi
            done
            
            # --- X·ª¨ L√ù GIT ---
            if [ "$any_update" = true ] || [ $((i % 10)) -eq 0 ]; then
              echo "üíæ ƒêang ƒë·ªìng b·ªô v·ªõi GitHub..."
              
              # Th√™m timestamp ƒë·ªÉ ƒë·∫£m b·∫£o lu√¥n c√≥ thay ƒë·ªïi
              date > Proxies/last_updated.txt
              
              git add --all
              if git diff --cached --quiet; then
                git commit --allow-empty -m "üîÑ Keep-alive #$i $(date +'%H:%M')"
              else
                git commit -m "üìå C·∫≠p nh·∫≠t proxy #$i $(date +'%H:%M')"
              fi
              
              # ƒê·∫©y code v·ªõi retry n·∫øu l·ªói
              for retry in {1..3}; do
                if git pull --no-rebase origin main && git push origin main; then
                  echo "‚úÖ ƒê·ªìng b·ªô th√†nh c√¥ng"
                  break
                else
                  echo "‚ö†Ô∏è L·ªói ƒë·ªìng b·ªô (l·∫ßn $retry), ƒëang th·ª≠ l·∫°i..."
                  sleep 5
                fi
              done
            else
              echo "‚è≠Ô∏è Kh√¥ng c√≥ thay ƒë·ªïi, b·ªè qua commit"
            fi
            
            # X·ª≠ l√Ω data.db m·ªói 60 ph√∫t (30 l·∫ßn l·∫∑p)
            if [ $((i % 30)) -eq 0 ]; then
              echo "üõ¢Ô∏è ƒêang x·ª≠ l√Ω data.db..."
              git add data.db
              git commit --allow-empty -m "üì¶ C·∫≠p nh·∫≠t data.db $(date +'%H:%M')"
              git pull origin main && git push origin main
            fi
            
            echo "‚è≥ Ch·ªù 120s..."
            sleep 120
          done
          
          echo "üéØ ƒê√É HO√ÄN TH√ÄNH T·∫§T C·∫¢ L·∫¶N L·∫∂P"

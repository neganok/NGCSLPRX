name: Setup Proxy Machine

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:
  schedule:
    - cron: '0 */5 * * *'  # Ch·∫°y m·ªói 5 gi·ªù

permissions:
  contents: write

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: üõ†Ô∏è Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: üöë Ki·ªÉm tra & s·ª≠a l·ªói Git (tr√°nh l·ªói fatal)
        run: |
          set +e
          echo "üîç Ki·ªÉm tra l·ªói Git..."
          if ! git fsck --full; then
            echo "‚ö†Ô∏è Ph√°t hi·ªán l·ªói Git, reset to√†n b·ªô..."
            rm -rf .git
            git init
            git remote add origin https://github.com/${{ github.repository }}.git
            git fetch origin
            git reset --hard origin/main
            git gc --prune=now
            git repack -a -d
            echo "‚úÖ ƒê√£ s·ª≠a l·ªói Git!"
          else
            echo "‚úÖ Repository kh√¥ng c√≥ l·ªói!"
          fi

      - name: üîÑ C√†i ƒë·∫∑t h·ªá th·ªëng & Python
        run: |
          sudo apt update && sudo apt install -y git python3 python3-pip python3-venv curl netcat-traditional

      - name: üè∞Ô∏è Thi·∫øt l·∫≠p Virtual Environment
        run: |
          python3 -m venv env
          source env/bin/activate
          pip install --upgrade pip
          test -f requirements.txt && pip install -r requirements.txt

      - name: üöÄ Ch·∫°y start.py
        run: |
          source env/bin/activate
          nohup python3 start.py > start.log 2>&1 &
          sleep 5

      - name: üîë C·∫•u h√¨nh Git
        run: |
          git config --global user.name "neganok"
          git config --global user.email "hackersvn1@gmail.com"
          git config --global pull.rebase false

      - name: üîÑ Ki·ªÉm tra & s·ª≠a l·ªói Git tr∆∞·ªõc khi t·∫£i proxy
        run: |
          set +e
          echo "üõ†Ô∏è ƒêang ki·ªÉm tra Git..."
          rm -rf .git/index.lock 2>/dev/null || true
          git reflog expire --expire=now --all
          git fsck --full || true
          git gc --prune=now
          git repack -a -d

      - name: üîÑ C·∫≠p nh·∫≠t proxy v√† ƒë·∫©y d·ªØ li·ªáu
        run: |
          set -e
          mkdir -p Proxies
          update_proxy() {
            type=$1
            echo "üåê ƒêang t·∫£i proxy lo·∫°i $type..."
            if curl -s --connect-timeout 5 "http://127.0.0.1:8000/proxy/${type}?time=2&minutes=10&format=text" -o "Proxies/${type}.txt"; then
              echo "‚úÖ Proxy $type ƒë√£ ƒë∆∞·ª£c t·∫£i!"
            else
              echo "‚ùå L·ªói t·∫£i proxy $type, s·∫Ω th·ª≠ l·∫°i sau!"
            fi
          }

          for i in $(seq 1 300); do
            echo "üîÑ [L·∫ßn $i] ƒêang t·∫£i danh s√°ch proxy..."
            if ! nc -z 127.0.0.1 8000; then
              echo "‚ùå Proxy ch∆∞a ch·∫°y, ch·ªù 1 ph√∫t..."
              sleep 60
              continue
            fi
            for type in http https socks4 socks5; do update_proxy "$type"; done

            if [ -f "data.db" ]; then
              git add data.db
            fi

            if ! git diff --quiet; then
              git add Proxies/*.txt
              git fsck --full || true
              git gc --prune=now
              git repack -a -d
              git commit -m "üîÑ C·∫≠p nh·∫≠t proxy & data.db $(date)"

              # üî• Th·ª≠ l·∫°i push n·∫øu g·∫∑p l·ªói
              for attempt in {1..5}; do
                if git push origin main; then
                  echo "‚úÖ ƒê·∫©y proxy & data.db th√†nh c√¥ng!"
                  break
                else
                  echo "‚ö†Ô∏è L·ªói push, th·ª≠ l·∫°i l·∫ßn $attempt..."
                  sleep 10
                fi
              done
            else
              echo "‚ö†Ô∏è Kh√¥ng c√≥ thay ƒë·ªïi n√†o."
            fi
            sleep 60
          done

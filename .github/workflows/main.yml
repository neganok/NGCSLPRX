name: Proxy Master

on:
  schedule:
    - cron: '0 */5 * * *'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  update:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Kh·ªüi ƒë·ªông h·ªá th·ªëng
        run: |
          # X√≥a cache v√† reset repo
          git reset --hard HEAD
          git clean -fd
          git pull origin main
          
          # C√†i ƒë·∫∑t m√¥i tr∆∞·ªùng
          pip install -r requirements.txt
          nohup python3 start.py > start.log 2>&1 &
          sleep 20
          echo "üü¢ H·ªá th·ªëng s·∫µn s√†ng | $(date +'%H:%M:%S')"

      - name: C·∫≠p nh·∫≠t t·ª± ƒë·ªông
        run: |
          # Thi·∫øt l·∫≠p Git
          git config --global user.name "neganok"
          git config --global user.email "hackersvn1@gmail.com"
          git config --global gc.auto 0

          while true; do
            # Header
            echo "\n‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê $(date +'%H:%M:%S %d/%m/%Y') ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê"
            
            # ƒê·ªìng b·ªô repo
            git pull origin main || {
              echo "üî¥ L·ªói khi ƒë·ªìng b·ªô, th·ª≠ l·∫°i..."
              git reset --hard HEAD
              git pull origin main
            }

            # T·∫£i proxies v·ªõi x·ª≠ l√Ω l·ªói
            echo "üî∑ T·∫¢I PROXY"
            mkdir -p Proxies
            proxy_types=(http https socks4 socks5)
            
            for t in "${proxy_types[@]}"; do
              echo "  ‚ñ∏ $t:"
              retry_count=0
              max_retries=2
              
              while [ $retry_count -lt $max_retries ]; do
                if curl -m 30 -s "http://127.0.0.1:8000/proxy/$t?time=3&minutes=15&format=text" -o "Proxies/$t.txt"; then
                  count=$(grep -cve '^\s*$' "Proxies/$t.txt" 2>/dev/null || echo 0)
                  if [ $count -gt 0 ]; then
                    echo "    ‚û§ $count proxy"
                    break
                  else
                    echo "    ‚û§ C·∫£nh b√°o: File r·ªóng"
                  fi
                else
                  retry_count=$((retry_count + 1))
                  echo "    ‚û§ L·ªói t·∫£i (th·ª≠ l·∫°i $retry_count/$max_retries)"
                  sleep 5
                fi
              done
            done

            # X·ª≠ l√Ω Git
            git add -A
            changes=$(git diff --name-only --cached)
            
            if [ -n "$changes" ]; then
              echo "\nüî∑ THAY ƒê·ªîI:"
              echo "$changes" | xargs -I{} echo "  ‚Ä¢ {}"
              
              echo "\nüî∑ COMMIT:"
              git commit -m "üîÑ Update $(date +'%H:%M %d/%m')" || echo "  ‚ö†Ô∏è Kh√¥ng commit ƒë∆∞·ª£c"
              
              echo "\nüî∑ PUSH:"
              for i in {1..3}; do
                if git push origin main; then
                  echo "  ‚úÖ Th√†nh c√¥ng"
                  break
                else
                  echo "  üîÑ Th·ª≠ l·∫°i $i/3..."
                  git pull --rebase origin main
                  sleep $i
                fi
              done
            else
              echo "\n‚è© Kh√¥ng c√≥ thay ƒë·ªïi"
            fi
            
            echo "\n‚è≥ Ch·ªù 60s..."
            sleep 60
          done

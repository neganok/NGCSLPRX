name: Proxy Master

on:
  schedule:
    - cron: '0 */5 * * *'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  update:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code (Optimized)
        uses: actions/checkout@v4
        with:
          # B·ªè fetch-depth ƒë·ªÉ tr√°nh treo
          ref: ${{ github.ref }}
          path: main-repo  # Th√™m path ƒë·ªÉ tr√°nh xung ƒë·ªôt

      - name: C√†i ƒë·∫∑t m√¥i tr∆∞·ªùng
        working-directory: ./main-repo  # L√†m vi·ªác trong th∆∞ m·ª•c ƒë√£ checkout
        run: |
          echo "üõ†Ô∏è ƒêang c√†i ƒë·∫∑t m√¥i tr∆∞·ªùng..."
          pip install -r requirements.txt
          nohup python3 start.py > start.log 2>&1 &
          sleep 10
          echo "‚úÖ C√†i ƒë·∫∑t ho√†n t·∫•t!"

      - name: C·∫≠p nh·∫≠t t·ª± ƒë·ªông
        working-directory: ./main-repo
        run: |
          # Thi·∫øt l·∫≠p git an to√†n
          git config --global user.name "neganok"
          git config --global user.email "hackersvn1@gmail.com"
          git config --global gc.auto 0  # T·∫Øt GC ƒë·ªÉ tr√°nh l·ªói
          
          # ƒê·ªìng b·ªô repo tr∆∞·ªõc khi l√†m vi·ªác
          git remote update
          git reset --hard origin/main
          git clean -fd

          COUNT=0
          while true; do
            COUNT=$((COUNT + 1))
            echo "\nüîÅ [L·∫¶N $COUNT] B·∫Øt ƒë·∫ßu l√∫c $(date +'%H:%M:%S %d/%m/%Y')"
            
            # T·∫£i proxies v·ªõi hi·ªÉn th·ªã s·ªë l∆∞·ª£ng
            echo "üì• T·∫£i proxies:"
            mkdir -p Proxies
            for t in http https socks4 socks5; do
              echo "  ‚Ü≥ $t..."
              if curl -s "http://127.0.0.1:8000/proxy/$t?time=3&minutes=15&format=text" -o "Proxies/$t.txt"; then
                count=$(wc -l < "Proxies/$t.txt")
                echo "     ‚úîÔ∏è $count proxy"
              else
                echo "     ‚ùå L·ªói"
              fi
            done

            # X·ª≠ l√Ω git c·ª±c k·ª≥ ch·∫Øc ch·∫Øn
            changed_files=$(git status -uno --porcelain)
            if [ -n "$changed_files" ]; then
              echo "üìù File thay ƒë·ªïi:"
              git diff --name-only --cached | while read file; do
                echo "  ‚Ä¢ $file"
              done

              echo "üíæ ƒêang commit..."
              git add -A
              git commit -m "üîÑ Update $(date +'%H:%M:%S %d/%m') [${COUNT}]"
              
              # Push v·ªõi retry th√¥ng minh
              for i in {1..5}; do
                if git push origin main; then
                  echo "‚úÖ Push th√†nh c√¥ng!"
                  break
                else
                  echo "üîÑ L·ªói push (th·ª≠ l·∫°i $i/5)..."
                  git pull --rebase origin main
                  sleep $i
                fi
              done
            else
              echo "‚è© Kh√¥ng c√≥ thay ƒë·ªïi"
            fi
            
            echo "‚è≥ Ch·ªù 60s..."
            sleep 60
          done

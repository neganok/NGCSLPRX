name: Proxy Master (Auto Update)

on:
  schedule:
    - cron: '0 */5 * * *'  # Ch·∫°y m·ªói 5 gi·ªù
  workflow_dispatch:        # Cho ph√©p ch·∫°y th·ªß c√¥ng

jobs:
  update:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Quan tr·ªçng ƒë·ªÉ tr√°nh l·ªói git

      - name: üöÄ Kh·ªüi ch·∫°y Proxy Service
        run: |
          python3 -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt
          pkill -f "python3 start.py" || true
          nohup python3 start.py > proxy.log 2>&1 &
          sleep 10

      - name: ‚öôÔ∏è C·∫•u h√¨nh Git ch·ªëng l·ªói
        run: |
          git config --global user.name "neganok"
          git config --global user.email "hackersvn1@gmail.com"
          git config --global http.postBuffer 524288000
          git config --global gc.auto 0  # T·∫Øt garbage collection
          git config --global core.autocrlf false

      - name: üîÑ C·∫≠p nh·∫≠t d·ªØ li·ªáu
        run: |
          START_TIME=$(date +%s)
          END_TIME=$((START_TIME + 5*60*60))  # 5 ti·∫øng sau
          COUNTER=0
          
          while [ $(date +%s) -lt $END_TIME ]; do
            COUNTER=$((COUNTER+1))
            CURRENT_TIME=$(date '+%H:%M:%S')
            echo "üîÑ ƒêang ch·∫°y - $CURRENT_TIME (L·∫ßn th·ª© $COUNTER)"
            
            # T·∫£i proxy
            mkdir -p Proxies
            for type in http https socks4 socks5; do
              curl -s "http://127.0.0.1:8000/proxy/$type?time=3&minutes=15&format=text" -o "Proxies/$type.txt" || true
            done

            # X·ª≠ l√Ω Git c·ª±c k·ª≥ ·ªïn ƒë·ªãnh
            git reset --hard HEAD
            git clean -fd
            git pull origin main
            
            git add Proxies/ data.db  # ƒê√£ th√™m data.db
            
            if ! git diff --cached --quiet; then
              git commit -m "üìå Update $CURRENT_TIME" --allow-empty || true
              
              # Push v·ªõi retry
              for retry in {1..3}; do
                if git push origin main; then
                  echo "‚úÖ ƒê√£ push th√†nh c√¥ng (L·∫ßn $COUNTER)"
                  break
                else
                  echo "üîÑ Th·ª≠ l·∫°i push ($retry/3)..."
                  sleep 5
                  git pull origin main
                fi
              done
            else
              echo "‚è≠Ô∏è Kh√¥ng c√≥ thay ƒë·ªïi"
            fi
            
            sleep 60
          done
          
          echo "üéâ ƒê√£ ho√†n th√†nh! T·ªïng s·ªë l·∫ßn c·∫≠p nh·∫≠t: $COUNTER"

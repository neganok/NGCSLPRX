name: Proxy Master

on:
  schedule:
    - cron: '0 */5 * * *'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  update:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Bắt buộc để tránh lỗi git

      - name: Khởi động hệ thống
        run: |
          pip install -r requirements.txt
          nohup python3 start.py > start.log 2>&1 &
          sleep 15
          echo "🟢 Hệ thống đã sẵn sàng"

      - name: Cập nhật tự động
        run: |
          git config --global user.name "neganok"
          git config --global user.email "hackersvn1@gmail.com"
          git config --global gc.auto 0

          while true; do
            # Header
            echo "\n═════════ $(date +'%H:%M:%S %d/%m/%Y') ═════════"
            
            # Đồng bộ repo trước mỗi lần chạy
            git pull --rebase origin main
            
            # Tải proxies
            echo "🔷 TẢI PROXY MỚI"
            mkdir -p Proxies
            for t in http https socks4 socks5; do
              echo "  ▸ Loại: $t"
              if curl -s "http://127.0.0.1:8000/proxy/$t?time=3&minutes=15&format=text" -o "Proxies/$t.txt"; then
                count=$(grep -cve '^\s*$' "Proxies/$t.txt")
                [ $count -eq 0 ] && echo "    ➤ Cảnh báo: 0 proxy" || echo "    ➤ Thành công: $count proxy"
              else
                echo "    ➤ Lỗi: Không thể tải"
              fi
            done

            # Xử lý git
            git add -A
            changes=$(git diff --name-only --cached)
            
            if [ -n "$changes" ]; then
              echo "\n🔷 PHÁT HIỆN THAY ĐỔI"
              echo "$changes" | while read file; do
                echo "  • $file"
              done
              
              # Commit và push với retry
              echo "\n🔷 ĐANG CẬP NHẬT"
              git commit -m "🔄 Cập nhật lúc $(date +'%H:%M %d/%m')"
              
              for i in {1..3}; do
                if git push origin main; then
                  echo "  ✅ Đã cập nhật thành công!"
                  break
                else
                  echo "  🔄 Lỗi khi push (thử lại $i/3)"
                  git pull --rebase origin main
                  sleep $((i*2))
                fi
              done
            else
              echo "\n⏩ Không có thay đổi cần commit"
            fi
            
            echo "\n⏳ Chờ 60 giây..."
            sleep 60
          done

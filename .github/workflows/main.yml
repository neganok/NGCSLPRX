name: Proxy Master Complete

on:
  schedule:
    - cron: '0 */5 * * *'  # Ch·∫°y t·ª± ƒë·ªông m·ªói 5 gi·ªù
  workflow_dispatch:        # Cho ph√©p ch·∫°y th·ªß c√¥ng

jobs:
  update:
    runs-on: ubuntu-latest
    timeout-minutes: 360    # Timeout sau 6h (d∆∞ 1h ƒë·ªÉ x·ª≠ l√Ω)

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0     # C·∫ßn full history ƒë·ªÉ ki·ªÉm tra thay ƒë·ªïi

      - name: Setup Python environment
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-venv
          python3 -m venv env
          source env/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt
          nohup python3 start.py > start.log 2>&1 &
          sleep 15  # ƒê·∫£m b·∫£o server kh·ªüi ƒë·ªông ho√†n to√†n

      - name: Configure Git
        run: |
          git config --global user.name "neganok"
          git config --global user.email "hackersvn1@gmail.com"
          git config --global pull.rebase true  # ∆Øu ti√™n rebase

      - name: Update and push proxies
        run: |
          set -e  # D·ª´ng ngay n·∫øu c√≥ l·ªói
          mkdir -p Proxies

          for i in {1..150}; do  # 150 l·∫ßn √ó 120s = 5 ti·∫øng
            echo "üîÑ Cycle $i/150 - $(date '+%H:%M:%S')"
            CHANGED_FILES=()

            # L·∫•y v√† ki·ªÉm tra proxy
            for t in http https socks4 socks5; do
              OLD_HASH=$(sha1sum "Proxies/$t.txt" 2>/dev/null | cut -d' ' -f1 || true)
              curl -s "http://127.0.0.1:8000/proxy/$t?time=3&minutes=15&format=text" -o "Proxies/$t.txt" || true
              
              # B·ªè qua file r·ªóng
              if [ ! -s "Proxies/$t.txt" ]; then
                rm -f "Proxies/$t.txt"
                continue
              fi

              NEW_HASH=$(sha1sum "Proxies/$t.txt" | cut -d' ' -f1)
              if [ "$OLD_HASH" != "$NEW_HASH" ]; then
                git add "Proxies/$t.txt"
                CHANGED_FILES+=("$t.txt")
              fi
            done

            # Ki·ªÉm tra data.db
            if [ -f "data.db" ]; then
              OLD_DB_HASH=$(sha1sum "data.db" 2>/dev/null | cut -d' ' -f1 || true)
              # Th√™m c√°c thao t√°c x·ª≠ l√Ω data.db c·ªßa b·∫°n ·ªü ƒë√¢y
              NEW_DB_HASH=$(sha1sum "data.db" | cut -d' ' -f1)
              
              if [ "$OLD_DB_HASH" != "$NEW_DB_HASH" ]; then
                git add "data.db"
                CHANGED_FILES+=("data.db")
              fi
            fi

            if [ ${#CHANGED_FILES[@]} -gt 0 ]; then
              echo "üÜï Files changed: ${CHANGED_FILES[*]}"
              git commit -m "üìå Update $(date +'%H:%M') - ${CHANGED_FILES[*]}"
              
              # Retry logic
              for retry in {1..3}; do
                if git pull --rebase && git push; then
                  echo "‚úÖ Push th√†nh c√¥ng"
                  break
                else
                  echo "üîÑ Retry $retry/3..."
                  sleep 5
                  git reset --hard HEAD
                fi
              done
            else
              echo "‚è≠Ô∏è Kh√¥ng c√≥ thay ƒë·ªïi"
            fi

            sleep 120  # ƒê·∫£m b·∫£o ch√≠nh x√°c 120s gi·ªØa c√°c l·∫ßn ch·∫°y
          done

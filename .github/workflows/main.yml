name: Setup Proxy Machine

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:
  schedule:
    - cron: '0 */5 * * *'

permissions:
  contents: write

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: üõ†Ô∏è Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
          persist-credentials: true

      - name: üîÑ C√†i ƒë·∫∑t h·ªá th·ªëng
        run: |
          sudo apt update && sudo apt install -y python3 python3-pip python3-venv curl netcat-traditional

      - name: üè∞Ô∏è Thi·∫øt l·∫≠p m√¥i tr∆∞·ªùng
        run: |
          python3 -m venv env
          source env/bin/activate
          pip install --upgrade pip
          test -f requirements.txt && pip install -r requirements.txt

      - name: üöÄ Kh·ªüi ƒë·ªông proxy
        run: |
          source env/bin/activate
          nohup python3 start.py > start.log 2>&1 &
          sleep 15

      - name: üîë C·∫•u h√¨nh Git
        run: |
          git config --global user.name "neganok"
          git config --global user.email "hackersvn1@gmail.com"
          git config --global init.defaultBranch main
          git config --global pull.rebase false

      - name: üîÑ C·∫≠p nh·∫≠t v√† ƒë·ªìng b·ªô d·ªØ li·ªáu
        run: |
          set -e
          mkdir -p Proxies

          # H√†m t·∫£i proxy ·ªïn ƒë·ªãnh
          download_proxy() {
            local type=$1
            for i in {1..3}; do
              if curl -s --connect-timeout 15 "http://127.0.0.1:8000/proxy/${type}?time=2&minutes=10&format=text" -o "Proxies/${type}.txt" && [ -s "Proxies/${type}.txt" ]; then
                echo "‚úÖ ƒê√£ t·∫£i $type"
                return 0
              fi
              sleep 5
            done
            echo "‚ö†Ô∏è Kh√¥ng th·ªÉ t·∫£i $type"
            return 1
          }

          # H√†m ƒë·ªìng b·ªô Git
          sync_git() {
            # Th√™m t·∫•t c·∫£ thay ƒë·ªïi
            git add -A
            
            if ! git diff --cached --quiet; then
              # T·∫°o commit
              git commit -m "üîÑ C·∫≠p nh·∫≠t proxy $(date +'%Y-%m-%d %H:%M:%S')" || true
              
              # ƒê·ªìng b·ªô v·ªõi remote
              for i in {1..3}; do
                if git pull origin main && git push origin main; then
                  echo "‚úÖ ƒê√£ push th√†nh c√¥ng"
                  return 0
                fi
                echo "‚ö†Ô∏è L·ªói push, th·ª≠ l·∫°i ($i/3)..."
                git reset --hard origin/main
                sleep 10
              done
              echo "‚ùå Kh√¥ng th·ªÉ push sau 3 l·∫ßn"
              return 1
            else
              echo "‚ÑπÔ∏è Kh√¥ng c√≥ thay ƒë·ªïi"
              return 0
            fi
          }

          # V√≤ng l·∫∑p ch√≠nh
          for cycle in {1..300}; do
            echo "üîÑ Chu k·ª≥ $cycle/300"
            
            # Ki·ªÉm tra proxy server
            if ! nc -z -w 10 127.0.0.1 8000; then
              echo "‚ùå Proxy ch∆∞a s·∫µn s√†ng, ch·ªù 30s..."
              sleep 30
              continue
            fi

            # T·∫£i c√°c proxy
            for type in http https socks4 socks5; do
              download_proxy "$type" || true
            done

            # ƒê·ªìng b·ªô v·ªõi Git
            if ! sync_git; then
              echo "‚ö†Ô∏è B·ªè qua l·ªói ƒë·ªìng b·ªô, ti·∫øp t·ª•c chu k·ª≥ sau..."
            fi
            
            sleep 60
          done

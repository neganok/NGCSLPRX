name: Proxy Master

on:
  schedule:
    - cron: '0 */5 * * *'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  update:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
          clean: true

      - name: Kh·ªüi ƒë·ªông h·ªá th·ªëng
        run: |
          # Reset to√†n b·ªô repo
          git reset --hard HEAD
          git clean -fdx
          git pull --force origin main
          
          pip install -r requirements.txt
          nohup python3 start.py > start.log 2>&1 &
          sleep 15
          echo "üü¢ H·ªá th·ªëng s·∫µn s√†ng | $(date +'%H:%M:%S')"

      - name: C·∫≠p nh·∫≠t t·ª± ƒë·ªông
        run: |
          # Thi·∫øt l·∫≠p Git ch·ªëng l·ªói
          git config --global user.name "neganok"
          git config --global user.email "hackersvn1@gmail.com"
          git config --global gc.auto 0
          git config --global pack.threads 1

          while true; do
            # Header
            echo "\n‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê $(date +'%H:%M:%S %d/%m/%Y') ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê"
            
            # ƒê·ªìng b·ªô repo c·ª±c m·∫°nh
            git fetch --prune --progress
            git reset --hard origin/main
            git clean -fdx
            
            # T·∫£i proxies
            echo "üî∑ T·∫¢I PROXY"
            mkdir -p Proxies
            for t in http https socks4 socks5; do
              echo "  ‚ñ∏ $t:"
              if curl -m 15 -s "http://127.0.0.1:8000/proxy/$t?time=3&minutes=15&format=text" -o "Proxies/$t.txt"; then
                count=$(grep -cve '^\s*$' "Proxies/$t.txt" 2>/dev/null || echo 0)
                echo "    ‚û§ $count proxy"
              else
                echo "    ‚û§ L·ªói t·∫£i"
              fi
            done

            # X·ª≠ l√Ω Git si√™u ch·∫Øc ch·∫Øn
            git add -A
            changes=$(git diff --name-only --cached)
            
            if [ -n "$changes" ]; then
              echo "\nüî∑ THAY ƒê·ªîI:"
              echo "$changes" | while read file; do
                echo "  ‚Ä¢ $file"
              done
              
              git commit -m "üîÑ Update $(date +'%H:%M %d/%m')" || true
              
              echo "\nüî∑ PUSH:"
              for i in {1..3}; do
                git fetch --prune
                if git push origin main; then
                  echo "  ‚úÖ Th√†nh c√¥ng"
                  break
                else
                  echo "  üîÑ Th·ª≠ l·∫°i $i/3..."
                  git reset --hard origin/main
                  sleep $i
                fi
              done
            else
              echo "\n‚è© Kh√¥ng c√≥ thay ƒë·ªïi"
            fi
            
            echo "\n‚è≥ Ch·ªù 60s..."
            sleep 60
          done

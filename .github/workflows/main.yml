name: Proxy Master

on:
  schedule:
    - cron: '0 */5 * * *'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  update:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        # B·ªè fetch-depth ƒë·ªÉ d√πng shallow clone m·∫∑c ƒë·ªãnh (nhanh h∆°n)

      - name: Setup environment
        run: |
          sudo apt install -y git python3-full python3-pip
          python3 -m venv env
          source env/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Start proxy service
        run: |
          set -e
          source env/bin/activate
          pkill -f "python3 start.py" || true
          nohup python3 start.py > start.log 2>&1 &
          sleep 15

      - name: Fast monitor and push
        run: |
          set -e
          source env/bin/activate
          git config --global user.name "neganok"
          git config --global user.email "hackersvn1@gmail.com"
          mkdir -p Proxies

          # L·∫•y tr·∫°ng th√°i hi·ªán t·∫°i c·ªßa c√°c file quan tr·ªçng
          OLD_DATA_HASH=$(sha1sum data.db 2>/dev/null || echo "")
          OLD_PROXY_HASH=$(find Proxies/ -type f -exec sha1sum {} + | sha1sum | cut -d' ' -f1)

          while true; do
            # L·∫•y proxies
            for t in http https socks4 socks5; do
              curl -s "http://127.0.0.1:8000/proxy/$t?time=3&minutes=15&format=text" -o "Proxies/$t.txt" || true
            done

            # Ki·ªÉm tra thay ƒë·ªïi b·∫±ng hash (nhanh h∆°n git diff)
            NEW_DATA_HASH=$(sha1sum data.db 2>/dev/null || echo "")
            NEW_PROXY_HASH=$(find Proxies/ -type f -exec sha1sum {} + | sha1sum | cut -d' ' -f1)

            if [ "$OLD_DATA_HASH" != "$NEW_DATA_HASH" ] || [ "$OLD_PROXY_HASH" != "$NEW_PROXY_HASH" ]; then
              echo "üîÑ Ph√°t hi·ªán thay ƒë·ªïi, ƒëang c·∫≠p nh·∫≠t..."
              git add data.db Proxies/
              git commit -m "üìå Fast update $(date +'%H:%M:%S')"
              
              # Push tr·ª±c ti·∫øp kh√¥ng c·∫ßn pull tr∆∞·ªõc (nhanh h∆°n)
              if git push origin main; then
                echo "‚úÖ ƒê√£ push th√†nh c√¥ng"
                # C·∫≠p nh·∫≠t hash m·ªõi
                OLD_DATA_HASH=$NEW_DATA_HASH
                OLD_PROXY_HASH=$NEW_PROXY_HASH
              else
                echo "‚ùå Push th·∫•t b·∫°i, s·∫Ω th·ª≠ l·∫°i l·∫ßn sau"
                git reset --hard
              fi
            else
              echo "‚è≠ Kh√¥ng c√≥ thay ƒë·ªïi"
            fi

            sleep 60
          done

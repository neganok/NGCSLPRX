name: Proxy Master

on:
  schedule:
    - cron: '0 */5 * * *'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  update:
    runs-on: ubuntu-latest
    timeout-minutes: 300  # 5 ti·∫øng

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # T·∫£i to√†n b·ªô l·ªãch s·ª≠ git ƒë·ªÉ tr√°nh l·ªói

      - name: Setup environment
        run: |
          pip install -r requirements.txt
          nohup python3 start.py > start.log 2>&1 &
          sleep 10

      - name: Simple updater
        run: |
          git config --global user.name "neganok"
          git config --global user.email "hackersvn1@gmail.com"
          
          # Reset v√† ƒë·ªìng b·ªô v·ªõi remote tr∆∞·ªõc khi b·∫Øt ƒë·∫ßu
          git remote update
          git reset --hard origin/main
          git clean -fd
          
          COUNT=0
          while [ $COUNT -lt 300 ]; do
            COUNT=$((COUNT + 1))
            echo "üîÑ L·∫ßn ch·∫°y th·ª© $COUNT"
            
            # T·∫£i proxies
            mkdir -p Proxies
            for t in http https socks4 socks5; do
              curl -s "http://127.0.0.1:8000/proxy/$t?time=3&minutes=15&format=text" -o "Proxies/$t.txt" || true
            done
            
            # Th√™m th·ªùi gian ch·ªù ng·∫´u nhi√™n ƒë·ªÉ gi·∫£m xung ƒë·ªôt
            sleep $((RANDOM % 10 + 1))
            
            # Th·ª±c hi·ªán git operations v·ªõi ki·ªÉm tra l·ªói
            git add Proxies/ data.db
            if git diff --cached --quiet; then
              echo "‚ö†Ô∏è Kh√¥ng c√≥ thay ƒë·ªïi"
            else
              git commit -m "C·∫≠p nh·∫≠t t·ª± ƒë·ªông $(date +'%H:%M:%S')"
              until git push origin main; do
                echo "‚ö†Ô∏è L·ªói khi push, th·ª≠ l·∫°i sau..."
                git pull --rebase origin main
                sleep 5
              done
              echo "‚úÖ Push th√†nh c√¥ng"
            fi
            
            sleep 60
          done
          
          echo "‚úÖ ƒê√£ ch·∫°y ƒë·ªß 5 ti·∫øng"

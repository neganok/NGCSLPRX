name: Proxy Master

on:
  schedule:
    - cron: '0 */5 * * *'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  update:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # QUAN TR·ªåNG: Gi·∫£i quy·∫øt l·ªói unstable object data

      - name: C√†i ƒë·∫∑t m√¥i tr∆∞·ªùng
        run: |
          echo "üõ†Ô∏è ƒêang c√†i ƒë·∫∑t m√¥i tr∆∞·ªùng..."
          pip install -r requirements.txt
          nohup python3 start.py > start.log 2>&1 &
          sleep 10
          echo "‚úÖ C√†i ƒë·∫∑t m√¥i tr∆∞·ªùng ho√†n t·∫•t!"

      - name: C·∫≠p nh·∫≠t t·ª± ƒë·ªông
        run: |
          echo "‚öôÔ∏è Thi·∫øt l·∫≠p th√¥ng tin Git..."
          git config --global user.name "neganok"
          git config --global user.email "hackersvn1@gmail.com"
          
          # Reset to√†n b·ªô repo tr∆∞·ªõc khi b·∫Øt ƒë·∫ßu
          git reset --hard
          git clean -fd
          git pull origin main

          COUNT=0
          while true; do
            COUNT=$((COUNT + 1))
            echo "\nüîÅ B·∫ÆT ƒê·∫¶U L·∫¶N CH·∫†Y TH·ª® $COUNT - $(date +'%H:%M:%S %d/%m/%Y')"
            
            # T·∫£i proxies
            echo "üì• ƒêang t·∫£i proxies m·ªõi..."
            mkdir -p Proxies
            for t in http https socks4 socks5; do
              echo "  ‚Ü≥ ƒêang t·∫£i $t..."
              curl -s "http://127.0.0.1:8000/proxy/$t?time=3&minutes=15&format=text" -o "Proxies/$t.txt" || echo "  ‚ùå L·ªói khi t·∫£i $t"
              if [ -f "Proxies/$t.txt" ]; then
                count=$(wc -l < "Proxies/$t.txt")
                echo "  ‚û°Ô∏è ƒê√£ t·∫£i $count proxy $t"
              fi
            done
            
            # X·ª≠ l√Ω Git
            echo "üîÑ ƒêang ki·ªÉm tra thay ƒë·ªïi..."
            git add Proxies/ data.db
            
            # Ki·ªÉm tra chi ti·∫øt t·ª´ng file thay ƒë·ªïi
            changed_files=$(git diff --cached --name-only)
            if [ -n "$changed_files" ]; then
              echo "üìù Ph√°t hi·ªán thay ƒë·ªïi c√°c file:"
              for file in $changed_files; do
                echo "  ‚Ä¢ $file"
              done
              
              echo "üíæ ƒêang t·∫°o commit..."
              git commit -m "üîÑ C·∫≠p nh·∫≠t t·ª± ƒë·ªông l√∫c $(date +'%H:%M:%S %d/%m/%Y')"
              
              # Push v·ªõi c∆° ch·∫ø retry m·∫°nh m·∫Ω
              echo "üöÄ ƒêang ƒë·∫©y thay ƒë·ªïi l√™n GitHub..."
              for attempt in {1..5}; do
                if git push origin main; then
                  echo "‚úÖ ƒê·∫©y th√†nh c√¥ng sau $attempt l·∫ßn th·ª≠!"
                  break
                else
                  echo "‚ö†Ô∏è L·ªói push (l·∫ßn th·ª≠ $attempt/5)"
                  git pull --rebase origin main
                  sleep $((attempt * 2))  # TƒÉng th·ªùi gian ch·ªù m·ªói l·∫ßn th·ª≠
                fi
              done
            else
              echo "‚è© Kh√¥ng c√≥ thay ƒë·ªïi, b·ªè qua commit"
            fi
            
            echo "‚è≥ ƒê·ª£i 1 ph√∫t tr∆∞·ªõc khi ch·∫°y l·∫°i..."
            sleep 60
          done

name: Proxy Master

on:
  schedule:
    - cron: '0 */5 * * *'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  update:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          path: main-repo

      - name: C√†i ƒë·∫∑t m√¥i tr∆∞·ªùng
        working-directory: ./main-repo
        run: |
          echo "üõ†Ô∏è ƒêang c√†i ƒë·∫∑t m√¥i tr∆∞·ªùng..."
          pip install -r requirements.txt
          nohup python3 start.py > start.log 2>&1 &
          sleep 10
          echo "‚úÖ C√†i ƒë·∫∑t ho√†n t·∫•t!"

      - name: C·∫≠p nh·∫≠t t·ª± ƒë·ªông
        working-directory: ./main-repo
        run: |
          # Thi·∫øt l·∫≠p git
          git config --global user.name "neganok"
          git config --global user.email "hackersvn1@gmail.com"
          git config --global gc.auto 0
          
          # Reset repo
          git fetch origin
          git reset --hard origin/main
          git clean -fd

          COUNT=0
          while true; do
            COUNT=$((COUNT + 1))
            echo "\n‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê L·∫¶N $COUNT - $(date +'%H:%M:%S %d/%m/%Y') ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê"
            
            # T·∫£i proxies
            echo "üî∑ T·∫¢I PROXIES"
            mkdir -p Proxies
            for t in http https socks4 socks5; do
              echo "  ‚ñ∏ Lo·∫°i: $t"
              if curl -s "http://127.0.0.1:8000/proxy/$t?time=3&minutes=15&format=text" -o "Proxies/$t.txt"; then
                count=$(wc -l < "Proxies/$t.txt")
                echo "    ‚û§ Th√†nh c√¥ng: $count proxy"
              else
                echo "    ‚û§ Th·∫•t b·∫°i: Kh√¥ng t·∫£i ƒë∆∞·ª£c"
              fi
            done

            # Ki·ªÉm tra thay ƒë·ªïi
            echo "\nüî∑ KI·ªÇM TRA THAY ƒê·ªîI"
            git add -A
            changes=$(git diff --name-only --cached)
            
            if [ -z "$changes" ]; then
              echo "  ‚ñ∏ Kh√¥ng c√≥ thay ƒë·ªïi"
            else
              echo "  ‚ñ∏ File thay ƒë·ªïi:"
              echo "$changes" | while read file; do
                echo "    ‚Ä¢ $file"
              done
              
              # Commit v√† push
              echo "\nüî∑ COMMIT & PUSH"
              git commit -m "üîÑ Update $(date +'%H:%M:%S %d/%m') [${COUNT}]" > /dev/null
              
              for i in {1..3}; do
                if git push origin main; then
                  echo "  ‚ñ∏ Push th√†nh c√¥ng!"
                  break
                else
                  echo "  ‚ñ∏ L·ªói push (th·ª≠ l·∫°i $i/3)"
                  git pull --rebase origin main
                  sleep $i
                fi
              done
            fi
            
            echo "\n‚è≥ Ch·ªù 60 gi√¢y..."
            sleep 60
          done

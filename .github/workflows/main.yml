name: Proxy Master

on:
  schedule:
    - cron: '0 */5 * * *'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  update:
    runs-on: ubuntu-latest
    concurrency:
      group: proxy-update-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          clean: true  # X√≥a s·∫°ch workspace tr∆∞·ªõc khi b·∫Øt ƒë·∫ßu

      - name: Setup Python
        run: |
          sudo apt update && sudo apt install -y python3 python3-venv curl
          python3 -m venv env
          source env/bin/activate
          nohup python3 start.py > start.log 2>&1 &
          sleep 20

      - name: Force Clean Workspace
        run: |
          # X√≥a c·ª©ng m·ªçi th·ª© tr·ª´ th∆∞ m·ª•c .git
          find . -path ./.git -prune -o -exec rm -rf {} \; 2>/dev/null || true
          git reset --hard
          git clean -fdx
          git pull origin main

      - name: Update Resources
        run: |
          set -ex
          mkdir -p Proxies
          
          # T·∫£i proxies
          for t in http https socks4 socks5; do
            curl -s -m 30 "http://127.0.0.1:8000/proxy/$t?time=3&minutes=15&format=text" -o "Proxies/$t.txt" || true
          done

          # T·∫£i database (n·∫øu c√≥)
          curl -s -m 30 "http://127.0.0.1:8000/db" -o data.db.tmp && mv data.db.tmp data.db || true

          # Git config
          git config --global user.name "neganok"
          git config --global user.email "hackersvn1@gmail.com"

          # CH·ªà add Proxies v√† data.db
          git add Proxies/
          [ -f "data.db" ] && git add data.db || true

          # Force commit (b·ªè qua m·ªçi thay ƒë·ªïi kh√°c)
          git commit -m "üìå Update $(date +'%H:%M')" --allow-empty || true
          git pull --allow-unrelated-histories -X ours origin main || true
          git push origin main

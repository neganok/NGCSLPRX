name: Setup Proxy Machine

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:
  schedule:
    - cron: '0 */5 * * *'

permissions:
  contents: write

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: üõ†Ô∏è Checkout repository (Ultra Safe Mode)
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
          clean: true

      - name: üîÑ C√†i ƒë·∫∑t h·ªá th·ªëng
        run: |
          sudo apt update && sudo apt install -y python3 python3-pip python3-venv curl netcat-traditional

      - name: üè∞Ô∏è Thi·∫øt l·∫≠p Virtual Environment
        run: |
          python3 -m venv env
          source env/bin/activate
          pip install --upgrade pip
          test -f requirements.txt && pip install -r requirements.txt

      - name: üöÄ Kh·ªüi ƒë·ªông proxy server
        run: |
          source env/bin/activate
          nohup python3 start.py > start.log 2>&1 &
          sleep 15

      - name: üîÑ Proxy Update System
        run: |
          set -e
          mkdir -p Proxies

          # H√†m ki·ªÉm tra proxy server
          check_proxy() {
            for i in {1..10}; do
              if nc -z -w 5 127.0.0.1 8000; then
                return 0
              fi
              sleep 10
            done
            return 1
          }

          # H√†m t·∫£i proxy c·ª±c k·ª≥ ·ªïn ƒë·ªãnh
          download_proxy() {
            local type=$1
            local tmpfile="Proxies/${type}.tmp"
            
            for i in {1..3}; do
              if curl -s --connect-timeout 15 "http://127.0.0.1:8000/proxy/${type}?time=2&minutes=10&format=text" -o "$tmpfile" && 
                 [ -s "$tmpfile" ]; then
                mv "$tmpfile" "Proxies/${type}.txt"
                return 0
              fi
              sleep 5
            done
            return 1
          }

          # H√†m ƒë·ªìng b·ªô Git kh√¥ng l·ªói
          safe_git_sync() {
            # T·∫°o workspace m·ªõi ho√†n to√†n
            git init
            git remote add origin "https://github.com/$GITHUB_REPOSITORY.git"
            git config user.name "neganok"
            git config user.email "hackersvn1@gmail.com"
            
            # K√©o d·ªØ li·ªáu m·ªõi nh·∫•t
            git fetch origin main --depth=1
            git reset --hard FETCH_HEAD
            
            # Copy d·ªØ li·ªáu c·∫ßn thi·∫øt
            mkdir -p Proxies
            cp -r $GITHUB_WORKSPACE/Proxies/* Proxies/ || true
            [ -f "$GITHUB_WORKSPACE/data.db" ] && cp "$GITHUB_WORKSPACE/data.db" . || true
            
            # Commit v√† push
            git add -A
            if ! git diff --cached --quiet; then
              git commit -m "üîÑ Proxy update $(date +'%Y-%m-%d %H:%M:%S')"
              git push origin main
            fi
          }

          # Main loop
          for cycle in {1..300}; do
            echo "üîÑ Cycle $cycle/300"
            
            # Ki·ªÉm tra proxy server
            if ! check_proxy; then
              echo "‚ùå Proxy server kh√¥ng kh·∫£ d·ª•ng"
              sleep 30
              continue
            fi

            # T·∫£i c√°c proxy
            for type in http https socks4 socks5; do
              if download_proxy "$type"; then
                echo "‚úÖ $type: Th√†nh c√¥ng"
              else
                echo "‚ö†Ô∏è $type: Th·∫•t b·∫°i"
              fi
            done

            # ƒê·ªìng b·ªô Git m·ªói 3 chu k·ª≥
            if (( cycle % 3 == 0 )); then
              echo "üíæ ƒêang ƒë·ªìng b·ªô d·ªØ li·ªáu..."
              safe_git_sync || echo "‚ö†Ô∏è ƒê·ªìng b·ªô th·∫•t b·∫°i, ti·∫øp t·ª•c chu k·ª≥ sau"
            fi
            
            sleep 60
          done
